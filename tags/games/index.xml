<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Games on Sherman&#39;s Blog</title>
    <link>https://ShermanXie1998.github.io/tags/games/</link>
    <description>Recent content in Games on Sherman&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ShermanXie1998.github.io/tags/games/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UE5的黑科技探寻</title>
      <link>https://ShermanXie1998.github.io/p/ue5%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80%E6%8E%A2%E5%AF%BB/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ShermanXie1998.github.io/p/ue5%E7%9A%84%E9%BB%91%E7%A7%91%E6%8A%80%E6%8E%A2%E5%AF%BB/</guid>
      <description>虚幻5初体验 虚幻5的抢先体验版已经发布到了Epic Game Launcher上，对应的源码工程也可以在官方的Github网站上拿到。

虚幻引擎5中文技术文档: https://docs.unrealengine.com/5.0/zh-CN/
虚幻引擎5源码地址: https://github.com/EpicGames/UnrealEngine/tree/ue5-early-access
虚幻引擎5官方入门课程链接: https://www.unrealengine.com/zh-CN/onlinelearning-courses/ue5-early-access-quickstart
此外，官方还免费给用户提供了视频演示中的Demo，方便大家快速体验新的功能与特性。（备注：工程98GB，最低系统要求为NVIDIA GTX 1080/AMD RX Vega 64或以上显卡，8GB显存、32GB系统内存）

打开编辑器，会发现虚幻5的界面有了较大的改动。扁平化的设计使界面看起来更为清晰和简洁，很大程度地改善了用户的预览体验。

当然，虚幻5的重头戏主要在新发布的两个核心技术上，Nanite和Lumen。我们可以通过Demo预览一个拥有数亿个三角形的场景，也可以动态调整光源参数来实时预览全局光照效果。

除了渲染上的变化,还有很多新的功能:  引擎内置集成了Quxiel的Bridge工具，可以直接将扫描的高清资产拖入到引擎中使用. 提供了全新的关卡加载系统WorldPartition，可以实时灵活地加载地图数据 全新的关卡协作编辑方式，支持多人合作编辑关卡，提供工作效率 提供了新的GameplayFeaturePlugin，可以迅速设计玩法原型 FullBodyIK、Root Motion Warpping等新的动画系统，可以自适应地形的实时调整骨骼位置 ControlRig得到完善，可以在编辑器内自定义调整骨骼动画，动画工作流程得到进一步优化 MetaSound，可以在编辑器内对音频做更为丰富的操作 Perforce插件支持Change list版本管理 支持Python脚本  
 技术 如果有朋友和我一样一直在关注着虚幻5，就会发现它早已不像最初那般神秘，各路大佬的深挖也让我们能更客观地看待这个引擎和相关的技术。
虚幻5最具代表性和影响力的核心技术有两项 ：Nanite和Lumen
Nanite Nanite，中文翻译为虚拟微多边形体几何体技术，简单来说就是引擎可以在运行时支持包含几乎无限个三角面的模型，即美术们可以将拥有数以亿计的多边形的模型直接导入到虚幻引擎中使用。如果这项技术真的能在工业界广泛应用，对游戏和影视行业的影响可以说是颠覆性的。

科普一下，我们常见的三维游戏世界（或CG场景）一般都是由三角面构成的，计算机通过对三角面逐个渲染从而展示出整个画面。一个3A游戏场景往往由数千万个三角面构成（包括人物、地形、建筑等），而一个科幻电影更是夸张到需要对数亿甚至数十亿的三角面进行渲染。
显然，三角面的数量越多，渲染的速度就越慢（虽然现在的显卡越来越强大），所以对于需要实时渲染的游戏来说，除了想尽办法剔除不展示的三角面，减少可见的三角面也是一个不得不做的妥协。

那么如何减少可见的三角面呢？技术上我们可以采用LOD动态减少三角面的数量（边坍缩技术）。但工业界常用的手段是在一开始就限制主模型的面数，一般会先在Zbrush里制作高模，然后烘焙置换贴图或法线贴图到低模上（保存更多的细节信息用于渲染流程中的光照计算），这样一个面数很低的模型也能表现出接近高模的效果。
显然这是为了性能的不得已而为，关注点集中在艺术效果的美术们必然不喜欢这冗余而繁杂的流程。如果虚幻5真的可以支持近乎无限的三角面数量，那么一定会大大解放艺术家们的生产力，这套高模烘焙低模的方式也会随着历史的推进逐渐被掩埋。
模型制作流程
相比画面效果，程序们当然更关注技术细节。从名字“虚拟微多边形”的“虚拟”二字，我们就很容易联想到操作系统中的虚拟内存技术。“虚拟内存”技术的核心思想是将硬盘虚拟为内存，通过动态替换的方式解决内存空间不足的问题（当然还有其他很多方面的意义）。
虚拟内存示意(简化版)
同理，渲染领域也有一个原理类似的技术称为“虚拟纹理”，由于GPU的显存有限，无法将一个复杂大场景的纹理全部存储，因此可以将这些纹理合成之后再存储到硬盘中。在渲染时根据屏幕上用到的资源索引进行实时更新，图形大神卡马克在2000年左右就成功地将纹理虚拟化技术应用在了游戏毁灭战士3（Doom 3）中。
虚拟纹理示意</description>
    </item>
    
  </channel>
</rss>
